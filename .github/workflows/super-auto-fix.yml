name: üöÄ SUPER AUTO-FIX

on:
  push:
    branches: [main]
    paths:
      - "SUPER_AUTO_FIX.md"
  workflow_dispatch:

jobs:
  super-fix:
    runs-on: ubuntu-latest

    steps:
      - name: üî• Checkout
        uses: actions/checkout@v4

      - name: üîê Azure Login
        run: |
          az login --service-principal \
            --username ${{ secrets.AZURE_CLIENT_ID }} \
            --password ${{ secrets.AZURE_CLIENT_SECRET }} \
            --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: ü§ñ SUPER AUTO-FIX CONTAINER APP ENV VARS
        run: |
          echo "ü§ñ SUPER –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï..."

          # Get existing resource names
          POSTGRES_NAME=$(az postgres flexible-server list -g tender-rg --query '[0].name' -o tsv 2>/dev/null || echo "")
          COGNITIVE_NAME=$(az cognitiveservices account list -g tender-rg --query '[0].name' -o tsv 2>/dev/null || echo "")
          STORAGE_NAME=$(az storage account list -g tender-rg --query '[0].name' -o tsv 2>/dev/null || echo "")

          echo "üìä Found resources:"
          echo "  PostgreSQL: $POSTGRES_NAME"
          echo "  Cognitive: $COGNITIVE_NAME"  
          echo "  Storage: $STORAGE_NAME"

          # Only update if we have resources
          if [ ! -z "$POSTGRES_NAME" ] && [ ! -z "$COGNITIVE_NAME" ] && [ ! -z "$STORAGE_NAME" ]; then
            echo "üîó Generating connection strings..."
            
            # Get connection details
            POSTGRES_HOST=$(az postgres flexible-server show -g tender-rg -n $POSTGRES_NAME --query 'fullyQualifiedDomainName' -o tsv)
            DATABASE_URL="postgresql://tenderadmin:TenderAI_2024_SecurePass!@${POSTGRES_HOST}:5432/tenderdb?sslmode=require"
            
            COGNITIVE_KEY=$(az cognitiveservices account keys list -g tender-rg -n $COGNITIVE_NAME --query 'key1' -o tsv)
            COGNITIVE_ENDPOINT=$(az cognitiveservices account show -g tender-rg -n $COGNITIVE_NAME --query 'properties.endpoint' -o tsv)
            
            STORAGE_KEY=$(az storage account keys list -g tender-rg --account-name $STORAGE_NAME --query '[0].value' -o tsv)
            STORAGE_CONN="DefaultEndpointsProtocol=https;AccountName=${STORAGE_NAME};AccountKey=${STORAGE_KEY};EndpointSuffix=core.windows.net"
            
            echo "‚úÖ Connection strings generated"
            
            # Update Container App
            echo "üîß Updating Container App environment variables..."
            az containerapp update \
              --name tender-api \
              --resource-group tender-rg \
              --set-env-vars \
                DATABASE_URL="$DATABASE_URL" \
                COGNITIVE_SERVICES_KEY="$COGNITIVE_KEY" \
                COGNITIVE_SERVICES_ENDPOINT="$COGNITIVE_ENDPOINT" \
                AZURE_STORAGE_CONNECTION_STRING="$STORAGE_CONN" \
                GEMINI_API_KEY="test-key-placeholder"
            
            echo "üéâ SUPER AUTO-FIX COMPLETED!"
            echo "‚úÖ All environment variables updated"
            
          else
            echo "‚ö†Ô∏è Some resources not found, skipping env update"
          fi

      - name: üß™ SUPER TEST
        run: |
          echo "üß™ Testing after SUPER AUTO-FIX..."
          API_URL="https://tender-api.bravesmoke-248b9fb5.westeurope.azurecontainerapps.io"

          # Wait for restart
          sleep 60

          # Test API
          echo "=== API Test ==="
          curl -s "$API_URL/" || echo "API not responding"

          echo "üéØ SUPER AUTO-FIX WORKFLOW COMPLETED!"

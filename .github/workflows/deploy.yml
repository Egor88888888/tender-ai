name: Deploy to Azure

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      REGISTRY: tenderacr.azurecr.io
      IMAGE_TAG: ${{ github.sha }}
      RG_NAME: tender-rg
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Azure Login
        run: |
          az login --service-principal --username ${{ secrets.AZURE_CLIENT_ID }} --password ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Deploy Infrastructure
        id: deploy
        run: |
          deployment_output=$(az deployment group create --resource-group ${{ env.RG_NAME }} --template-file infra/azuredeploy.bicep --output json)
          echo "deployment_output=$deployment_output" >> $GITHUB_OUTPUT
          acr_server=$(echo $deployment_output | jq -r '.properties.outputs.acrLoginServer.value')
          echo "acr_server=$acr_server" >> $GITHUB_OUTPUT
          echo "ACR Server: $acr_server"

      - name: Log in to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.deploy.outputs.acr_server }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ steps.deploy.outputs.acr_server }}/tender-api:${{ github.sha }}
            ${{ steps.deploy.outputs.acr_server }}/tender-api:latest

      - name: Update Container App
        run: |
          az deployment group create --resource-group ${{ env.RG_NAME }} --template-file infra/azuredeploy.bicep --parameters apiImage=${{ steps.deploy.outputs.acr_server }}/tender-api:${{ github.sha }}

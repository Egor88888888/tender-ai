name: Deploy to Azure

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      REGISTRY: tenderacr.azurecr.io
      IMAGE_TAG: ${{ github.sha }}
      RG_NAME: tender-rg
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Azure Login
        run: |
          az login --service-principal --username ${{ secrets.AZURE_CLIENT_ID }} --password ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Deploy Infrastructure
        id: deploy
        run: |
          echo "Deploying infrastructure..."
          az deployment group create --resource-group ${{ env.RG_NAME }} --template-file infra/azuredeploy.bicep --mode Incremental
          echo "Getting ACR info..."
          # Get first ACR in resource group (fallback method)
          acr_info=$(az acr list --resource-group ${{ env.RG_NAME }} --query '[0]' --output json)
          acr_server=$(echo $acr_info | jq -r '.loginServer')
          acr_name=$(echo $acr_info | jq -r '.name')
          echo "acr_server=$acr_server" >> $GITHUB_OUTPUT
          echo "acr_name=$acr_name" >> $GITHUB_OUTPUT
          echo "ACR Server: $acr_server"
          echo "ACR Name: $acr_name"

      - name: Get ACR credentials
        id: acr_creds
        run: |
          echo "Getting ACR admin credentials..."
          acr_username=$(az acr credential show --name ${{ steps.deploy.outputs.acr_name }} --query 'username' --output tsv)
          acr_password=$(az acr credential show --name ${{ steps.deploy.outputs.acr_name }} --query 'passwords[0].value' --output tsv)
          echo "acr_username=$acr_username" >> $GITHUB_OUTPUT
          echo "acr_password=$acr_password" >> $GITHUB_OUTPUT
          echo "Username: $acr_username"

      - name: Log in to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.deploy.outputs.acr_server }}
          username: ${{ steps.acr_creds.outputs.acr_username }}
          password: ${{ steps.acr_creds.outputs.acr_password }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ steps.deploy.outputs.acr_server }}/tender-api:${{ github.sha }}
            ${{ steps.deploy.outputs.acr_server }}/tender-api:latest

      - name: Update Container App
        run: |
          echo "Updating Container App with image: ${{ steps.deploy.outputs.acr_server }}/tender-api:${{ github.sha }}"
          az deployment group create --resource-group ${{ env.RG_NAME }} --template-file infra/update-app.bicep --parameters apiImage="${{ steps.deploy.outputs.acr_server }}/tender-api:${{ github.sha }}"

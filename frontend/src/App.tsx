import React, { useState, useEffect } from 'react'
import { 
  Layout, 
  Menu, 
  Typography, 
  Space, 
  Card, 
  Statistic, 
  Upload, 
  Button, 
  message, 
  Progress,
  Table,
  Tag,
  Avatar,
  Badge,
  Tooltip,
  Row,
  Col,
  Spin,
  notification
} from 'antd'
import { 
  DashboardOutlined, 
  FileTextOutlined, 
  CloudUploadOutlined,
  BarChartOutlined,
  SettingOutlined,
  InboxOutlined,
  UserOutlined,
  BellOutlined,
  RobotOutlined,
  SafetyCertificateOutlined,
  CloudServerOutlined,
  ThunderboltOutlined,
  CheckCircleOutlined,
  ExclamationCircleOutlined,
  LoadingOutlined,
  EyeOutlined,
  DownloadOutlined
} from '@ant-design/icons'
import { useQuery, useMutation } from 'react-query'
import axios from 'axios'

const { Header, Sider, Content } = Layout
const { Title, Text, Paragraph } = Typography
const { Dragger } = Upload

const API_BASE = import.meta.env.VITE_API_URL || 'https://tender-api.bravesmoke-248b9fb5.westeurope.azurecontainerapps.io'

// API functions
const fetchApiStatus = async () => {
  const response = await axios.get(`${API_BASE}/`)
  return response.data
}

const fetchTenders = async () => {
  try {
    const response = await axios.get(`${API_BASE}/api/tenders`)
    return response.data
  } catch (error) {
    return []
  }
}

const uploadDocument = async (file: File) => {
  const formData = new FormData()
  formData.append('file', file)
  const response = await axios.post(`${API_BASE}/api/upload-document`, formData, {
    headers: { 'Content-Type': 'multipart/form-data' }
  })
  return response.data
}

const analyzeWithAI = async (text: string) => {
  const response = await axios.post(`${API_BASE}/api/analyze-tender`, { text })
  return response.data
}

// Enhanced Dashboard Component
const Dashboard: React.FC = () => {
  const { data: apiStatus, isLoading: statusLoading } = useQuery('apiStatus', fetchApiStatus, {
    refetchInterval: 30000,
  })
  const { data: tenders, isLoading: tendersLoading } = useQuery('tenders', fetchTenders)

  const getStatusColor = (isActive: boolean) => isActive ? '#52c41a' : '#ff4d4f'
  const getStatusText = (isActive: boolean) => isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'

  const serviceCards = [
    {
      title: 'API –°—Ç–∞—Ç—É—Å',
      value: apiStatus?.status === 'ok' ? '–†–∞–±–æ—Ç–∞–µ—Ç' : '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
      icon: <CloudServerOutlined style={{ fontSize: 24 }} />,
      color: apiStatus?.status === 'ok' ? '#52c41a' : '#ff4d4f',
      loading: statusLoading
    },
    {
      title: 'Blob Storage',
      value: getStatusText(apiStatus?.features?.blob_storage),
      icon: <SafetyCertificateOutlined style={{ fontSize: 24 }} />,
      color: getStatusColor(apiStatus?.features?.blob_storage),
      loading: statusLoading
    },
    {
      title: 'Gemini AI',
      value: getStatusText(apiStatus?.features?.gemini_ai),
      icon: <RobotOutlined style={{ fontSize: 24 }} />,
      color: getStatusColor(apiStatus?.features?.gemini_ai),
      loading: statusLoading
    },
    {
      title: 'OCR Vision',
      value: getStatusText(apiStatus?.features?.computer_vision),
      icon: <EyeOutlined style={{ fontSize: 24 }} />,
      color: getStatusColor(apiStatus?.features?.computer_vision),
      loading: statusLoading
    }
  ]

  return (
    <div style={{ padding: '0 24px' }}>
      <div style={{ marginBottom: 32 }}>
        <Title level={2} style={{ margin: 0, background: 'linear-gradient(135deg, #1890ff, #722ed1)', WebkitBackgroundClip: 'text', WebkitTextFillColor: 'transparent' }}>
          üöÄ –î–∞—à–±–æ—Ä–¥ AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –¥–ª—è –¢–µ–Ω–¥–µ—Ä–æ–≤
        </Title>
        <Paragraph style={{ fontSize: 16, color: '#666', marginTop: 8 }}>
          –ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–Ω–¥–µ—Ä–æ–≤ –Ω–∞ –±–∞–∑–µ Azure
        </Paragraph>
      </div>

      <Row gutter={[24, 24]} style={{ marginBottom: 32 }}>
        {serviceCards.map((service, index) => (
          <Col xs={24} sm={12} lg={6} key={index}>
            <Card
              hoverable
              style={{
                borderRadius: 12,
                boxShadow: '0 4px 12px rgba(0,0,0,0.1)',
                border: '1px solid #f0f0f0',
                transition: 'all 0.3s ease'
              }}
              bodyStyle={{ padding: 20 }}
            >
              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
                <div>
                  <div style={{ color: service.color, marginBottom: 8 }}>
                    {service.icon}
                  </div>
                  <Statistic
                    title={service.title}
                    value={service.loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : service.value}
                    valueStyle={{ 
                      color: service.color, 
                      fontSize: 16, 
                      fontWeight: 600 
                    }}
                    prefix={service.loading ? <LoadingOutlined /> : null}
                  />
                </div>
                <div style={{
                  width: 48,
                  height: 48,
                  borderRadius: '50%',
                  background: `${service.color}15`,
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center'
                }}>
                  {service.loading ? <Spin /> : service.icon}
                </div>
              </div>
            </Card>
          </Col>
        ))}
      </Row>

      <Row gutter={[24, 24]}>
        <Col xs={24} lg={16}>
          <Card
            title={
              <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>
                <ThunderboltOutlined style={{ color: '#1890ff' }} />
                –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
              </div>
            }
            style={{
              borderRadius: 12,
              boxShadow: '0 4px 12px rgba(0,0,0,0.1)'
            }}
          >
            <Row gutter={[16, 16]}>
              <Col span={12}>
                <Statistic
                  title="–í–µ—Ä—Å–∏—è API"
                  value={apiStatus?.version || '–ó–∞–≥—Ä—É–∑–∫–∞...'}
                  prefix={<CheckCircleOutlined style={{ color: '#52c41a' }} />}
                />
              </Col>
              <Col span={12}>
                <Statistic
                  title="–í—Å–µ–≥–æ —Ç–µ–Ω–¥–µ—Ä–æ–≤"
                  value={tendersLoading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : (tenders?.length || 0)}
                  prefix={<FileTextOutlined style={{ color: '#1890ff' }} />}
                />
              </Col>
            </Row>
            
            <div style={{ marginTop: 24 }}>
              <Title level={5}>–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã Azure:</Title>
              <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>
                {Object.entries(apiStatus?.features || {}).map(([key, value]) => (
                  <Tag
                    key={key}
                    color={value ? 'success' : 'error'}
                    icon={value ? <CheckCircleOutlined /> : <ExclamationCircleOutlined />}
                    style={{ padding: '4px 12px', borderRadius: 20 }}
                  >
                    {key.replace('_', ' ').toUpperCase()}
                  </Tag>
                ))}
              </div>
            </div>
          </Card>
        </Col>
        
        <Col xs={24} lg={8}>
          <Card
            title={
              <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>
                <BellOutlined style={{ color: '#fa8c16' }} />
                –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
              </div>
            }
            style={{
              borderRadius: 12,
              boxShadow: '0 4px 12px rgba(0,0,0,0.1)'
            }}
          >
            <Space direction="vertical" style={{ width: '100%' }} size="middle">
              <Button 
                type="primary" 
                icon={<CloudUploadOutlined />} 
                size="large" 
                block
                style={{ borderRadius: 8, height: 48 }}
                onClick={() => window.dispatchEvent(new CustomEvent('navigate', { detail: 'upload' }))}
              >
                –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç
              </Button>
              <Button 
                icon={<BarChartOutlined />} 
                size="large" 
                block
                style={{ borderRadius: 8, height: 48 }}
                onClick={() => window.dispatchEvent(new CustomEvent('navigate', { detail: 'analytics' }))}
              >
                –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É
              </Button>
              <Button 
                icon={<FileTextOutlined />} 
                size="large" 
                block
                style={{ borderRadius: 8, height: 48 }}
                onClick={() => window.dispatchEvent(new CustomEvent('navigate', { detail: 'tenders' }))}
              >
                –í—Å–µ —Ç–µ–Ω–¥–µ—Ä—ã
              </Button>
            </Space>
          </Card>
        </Col>
      </Row>
    </div>
  )
}

// Enhanced Upload Component
const DocumentUpload: React.FC = () => {
  const [uploading, setUploading] = useState(false)
  const [uploadResult, setUploadResult] = useState<any>(null)
  const [progress, setProgress] = useState(0)
  const [aiAnalyzing, setAiAnalyzing] = useState(false)
  const [aiResult, setAiResult] = useState<any>(null)

  const uploadMutation = useMutation(uploadDocument, {
    onSuccess: (data) => {
      setUploadResult(data)
      notification.success({
        message: '–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω!',
        description: '–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∞–Ω–∞–ª–∏–∑—É',
        icon: <CheckCircleOutlined style={{ color: '#52c41a' }} />
      })
    },
    onError: () => {
      notification.error({
        message: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
      })
    }
  })

  const aiAnalyzeMutation = useMutation(analyzeWithAI, {
    onSuccess: (data) => {
      setAiResult(data)
      notification.success({
        message: 'AI –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!',
        description: '–ü–æ–ª—É—á–µ–Ω—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–µ–Ω–¥–µ—Ä—É',
        icon: <RobotOutlined style={{ color: '#1890ff' }} />
      })
    }
  })

  const handleUpload = async (file: File) => {
    setUploading(true)
    setProgress(0)
    
    const interval = setInterval(() => {
      setProgress(prev => {
        if (prev >= 90) {
          clearInterval(interval)
          return 90
        }
        return prev + 10
      })
    }, 200)

    try {
      const result = await uploadMutation.mutateAsync(file)
      setProgress(100)
      setTimeout(() => setProgress(0), 1000)
    } catch (error) {
      setProgress(0)
      console.error('Upload error:', error)
    } finally {
      setUploading(false)
      clearInterval(interval)
    }
    return false
  }

  const handleAIAnalyze = () => {
    if (uploadResult?.ocr_text) {
      setAiAnalyzing(true)
      aiAnalyzeMutation.mutate(uploadResult.ocr_text)
      setTimeout(() => setAiAnalyzing(false), 2000)
    }
  }

  return (
    <div style={{ padding: '0 24px' }}>
      <div style={{ marginBottom: 32 }}>
        <Title level={2} style={{ margin: 0 }}>
          üìÑ –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        </Title>
        <Paragraph style={{ fontSize: 16, color: '#666', marginTop: 8 }}>
          –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã —Ç–µ–Ω–¥–µ—Ä–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏ AI-–∞–Ω–∞–ª–∏–∑–∞
        </Paragraph>
      </div>

      <Row gutter={[24, 24]}>
        <Col xs={24} lg={12}>
          <Card
            title={
              <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>
                <CloudUploadOutlined style={{ color: '#1890ff' }} />
                –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
              </div>
            }
            style={{
              borderRadius: 12,
              boxShadow: '0 4px 12px rgba(0,0,0,0.1)'
            }}
          >
            <Dragger
              name="file"
              multiple={false}
              accept=".pdf,.doc,.docx,.jpg,.jpeg,.png"
              beforeUpload={handleUpload}
              showUploadList={false}
              style={{
                borderRadius: 8,
                border: '2px dashed #d9d9d9',
                transition: 'all 0.3s ease'
              }}
            >
              <div style={{ padding: '40px 20px' }}>
                <p className="ant-upload-drag-icon">
                  <InboxOutlined style={{ fontSize: 48, color: '#1890ff' }} />
                </p>
                <p className="ant-upload-text" style={{ fontSize: 18, fontWeight: 600 }}>
                  –ù–∞–∂–º–∏—Ç–µ –∏–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞
                </p>
                <p className="ant-upload-hint" style={{ fontSize: 14, color: '#666' }}>
                  –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: PDF, DOC, DOCX, JPG, PNG (–º–∞–∫—Å. 10MB)
                </p>
              </div>
            </Dragger>
            
            {uploading && (
              <div style={{ marginTop: 16 }}>
                <Progress 
                  percent={progress} 
                  status="active"
                  strokeColor={{
                    '0%': '#108ee9',
                    '100%': '#87d068',
                  }}
                />
                <Text style={{ color: '#666' }}>–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞...</Text>
              </div>
            )}
          </Card>
        </Col>

        <Col xs={24} lg={12}>
          {uploadResult ? (
            <Card
              title={
                <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>
                  <CheckCircleOutlined style={{ color: '#52c41a' }} />
                  –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏
                </div>
              }
              style={{
                borderRadius: 12,
                boxShadow: '0 4px 12px rgba(0,0,0,0.1)'
              }}
              extra={
                <Button
                  type="primary"
                  icon={<RobotOutlined />}
                  loading={aiAnalyzing}
                  onClick={handleAIAnalyze}
                  disabled={!uploadResult?.ocr_text}
                >
                  AI –ê–Ω–∞–ª–∏–∑
                </Button>
              }
            >
              <Space direction="vertical" style={{ width: '100%' }} size="middle">
                <div>
                  <Text strong>–§–∞–π–ª: </Text>
                  <Text>{uploadResult.filename}</Text>
                </div>
                <div>
                  <Text strong>–†–∞–∑–º–µ—Ä: </Text>
                  <Text>{Math.round(uploadResult.size / 1024)} KB</Text>
                </div>
                {uploadResult.ocr_text && (
                  <div>
                    <Text strong>–ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:</Text>
                    <div style={{ 
                      background: '#f8f9fa', 
                      padding: '16px', 
                      borderRadius: '8px', 
                      marginTop: '8px',
                      maxHeight: '200px',
                      overflow: 'auto',
                      border: '1px solid #e9ecef'
                    }}>
                      <Text style={{ fontSize: 14, lineHeight: 1.6 }}>
                        {uploadResult.ocr_text.substring(0, 500)}
                        {uploadResult.ocr_text.length > 500 && '...'}
                      </Text>
                    </div>
                  </div>
                )}
              </Space>
            </Card>
          ) : (
            <Card
              style={{
                borderRadius: 12,
                boxShadow: '0 4px 12px rgba(0,0,0,0.1)',
                background: '#fafafa',
                border: '1px dashed #d9d9d9'
              }}
            >
              <div style={{ textAlign: 'center', padding: '60px 20px' }}>
                <FileTextOutlined style={{ fontSize: 48, color: '#bfbfbf', marginBottom: 16 }} />
                <Title level={4} style={{ color: '#bfbfbf' }}>
                  –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
                </Title>
                <Text style={{ color: '#999' }}>
                  –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å
                </Text>
              </div>
            </Card>
          )}
        </Col>
      </Row>

      {aiResult && (
        <div style={{ marginTop: 24 }}>
          <Card
            title={
              <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>
                <RobotOutlined style={{ color: '#722ed1' }} />
                AI –ê–Ω–∞–ª–∏–∑ —Ç–µ–Ω–¥–µ—Ä–∞
              </div>
            }
            style={{
              borderRadius: 12,
              boxShadow: '0 4px 12px rgba(0,0,0,0.1)',
              border: '1px solid #722ed1'
            }}
          >
            <div style={{ 
              background: 'linear-gradient(135deg, #f6f8ff, #fff0f6)', 
              padding: '20px', 
              borderRadius: '8px',
              border: '1px solid #f0f0f0'
            }}>
              <Text style={{ fontSize: 16, lineHeight: 1.8 }}>
                {aiResult.analysis || '–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤—ã.'}
              </Text>
            </div>
          </Card>
        </div>
      )}
    </div>
  )
}

// Enhanced Tenders List Component
const TendersList: React.FC = () => {
  const { data: tenders, isLoading } = useQuery('tenders', fetchTenders)

  const columns = [
    {
      title: '–ù–æ–º–µ—Ä —Ç–µ–Ω–¥–µ—Ä–∞',
      dataIndex: 'id',
      key: 'id',
      render: (id: string) => <Tag color="blue">#{id}</Tag>
    },
    {
      title: '–ù–∞–∑–≤–∞–Ω–∏–µ',
      dataIndex: 'title',
      key: 'title',
      render: (title: string) => <Text strong>{title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</Text>
    },
    {
      title: '–°—Ç–∞—Ç—É—Å',
      dataIndex: 'status',
      key: 'status',
      render: (status: string) => (
        <Tag color={status === 'active' ? 'success' : status === 'pending' ? 'warning' : 'default'}>
          {status?.toUpperCase() || '–ù–û–í–´–ô'}
        </Tag>
      )
    },
    {
      title: '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
      dataIndex: 'created_at',
      key: 'created_at',
      render: (date: string) => date ? new Date(date).toLocaleDateString('ru-RU') : '–°–µ–≥–æ–¥–Ω—è'
    },
    {
      title: '–î–µ–π—Å—Ç–≤–∏—è',
      key: 'actions',
      render: () => (
        <Space>
          <Button icon={<EyeOutlined />} size="small">–ü—Ä–æ—Å–º–æ—Ç—Ä</Button>
          <Button icon={<DownloadOutlined />} size="small">–°–∫–∞—á–∞—Ç—å</Button>
        </Space>
      )
    }
  ]

  return (
    <div style={{ padding: '0 24px' }}>
      <div style={{ marginBottom: 32 }}>
        <Title level={2} style={{ margin: 0 }}>
          üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–Ω–¥–µ—Ä–∞–º–∏
        </Title>
        <Paragraph style={{ fontSize: 16, color: '#666', marginTop: 8 }}>
          –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∏ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ –≤—Å–µ–º–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ —Ç–µ–Ω–¥–µ—Ä–∞–º–∏
        </Paragraph>
      </div>

      <Card
        style={{
          borderRadius: 12,
          boxShadow: '0 4px 12px rgba(0,0,0,0.1)'
        }}
        extra={
          <Button type="primary" icon={<CloudUploadOutlined />}>
            –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–Ω–¥–µ—Ä
          </Button>
        }
      >
        <Table
          columns={columns}
          dataSource={tenders || []}
          loading={isLoading}
          pagination={{
            pageSize: 10,
            showSizeChanger: true,
            showQuickJumper: true,
            showTotal: (total) => `–í—Å–µ–≥–æ ${total} —Ç–µ–Ω–¥–µ—Ä–æ–≤`
          }}
          locale={{
            emptyText: (
              <div style={{ padding: '40px', textAlign: 'center' }}>
                <FileTextOutlined style={{ fontSize: 48, color: '#bfbfbf', marginBottom: 16 }} />
                <div>
                  <Title level={4} style={{ color: '#bfbfbf' }}>–¢–µ–Ω–¥–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</Title>
                  <Text style={{ color: '#999' }}>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–µ—Ä–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã</Text>
                </div>
              </div>
            )
          }}
        />
      </Card>
    </div>
  )
}

// Main App Component
const App: React.FC = () => {
  const [selectedKey, setSelectedKey] = useState('dashboard')
  const [collapsed, setCollapsed] = useState(false)

  useEffect(() => {
    const handleNavigate = (event: any) => {
      setSelectedKey(event.detail)
    }
    window.addEventListener('navigate', handleNavigate)
    return () => window.removeEventListener('navigate', handleNavigate)
  }, [])

  const menuItems = [
    {
      key: 'dashboard',
      icon: <DashboardOutlined />,
      label: '–î–∞—à–±–æ—Ä–¥',
    },
    {
      key: 'upload',
      icon: <CloudUploadOutlined />,
      label: '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
    },
    {
      key: 'tenders',
      icon: <FileTextOutlined />,
      label: '–¢–µ–Ω–¥–µ—Ä—ã',
    },
    {
      key: 'analytics',
      icon: <BarChartOutlined />,
      label: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
    },
    {
      key: 'settings',
      icon: <SettingOutlined />,
      label: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
    },
  ]

  const renderContent = () => {
    switch (selectedKey) {
      case 'dashboard':
        return <Dashboard />
      case 'upload':
        return <DocumentUpload />
      case 'tenders':
        return <TendersList />
      case 'analytics':
        return (
          <div style={{ padding: '0 24px', textAlign: 'center', paddingTop: '100px' }}>
            <BarChartOutlined style={{ fontSize: 72, color: '#bfbfbf', marginBottom: 24 }} />
            <Title level={3} style={{ color: '#bfbfbf' }}>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</Title>
            <Paragraph style={{ color: '#999', fontSize: 16 }}>
              –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≥—Ä–∞—Ñ–∏–∫–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–µ–Ω–¥–µ—Ä–∞–º
            </Paragraph>
          </div>
        )
      case 'settings':
        return (
          <div style={{ padding: '0 24px', textAlign: 'center', paddingTop: '100px' }}>
            <SettingOutlined style={{ fontSize: 72, color: '#bfbfbf', marginBottom: 24 }} />
            <Title level={3} style={{ color: '#bfbfbf' }}>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</Title>
            <Paragraph style={{ color: '#999', fontSize: 16 }}>
              –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏—Å—Ç–µ–º—ã
            </Paragraph>
          </div>
        )
      default:
        return <Dashboard />
    }
  }

  return (
    <Layout style={{ minHeight: '100vh' }}>
      <Sider 
        theme="dark" 
        width={280}
        collapsible
        collapsed={collapsed}
        onCollapse={setCollapsed}
        style={{
          background: 'linear-gradient(180deg, #001529 0%, #002140 100%)',
          boxShadow: '2px 0 8px 0 rgba(29,35,41,.05)'
        }}
      >
        <div style={{ 
          padding: collapsed ? '16px 8px' : '24px 20px', 
          textAlign: 'center',
          borderBottom: '1px solid #002140'
        }}>
          {!collapsed ? (
            <>
              <Title level={3} style={{ color: 'white', margin: 0, fontSize: 20 }}>
                üöÄ Tender AI
              </Title>
              <Text style={{ color: '#8c8c8c', fontSize: 12 }}>Azure Full Stack Platform</Text>
            </>
          ) : (
            <div style={{ fontSize: 24 }}>üöÄ</div>
          )}
        </div>
        
        <Menu
          theme="dark"
          mode="inline"
          selectedKeys={[selectedKey]}
          items={menuItems}
          onSelect={({ key }) => setSelectedKey(key)}
          style={{
            background: 'transparent',
            border: 'none',
            fontSize: 14
          }}
        />
      </Sider>
      
      <Layout>
        <Header 
          style={{ 
            background: 'white', 
            padding: '0 32px',
            boxShadow: '0 2px 8px rgba(0,0,0,0.1)',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'space-between'
          }}
        >
          <Title level={4} style={{ margin: 0, color: '#262626' }}>
            AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–Ω–¥–µ—Ä–æ–≤
          </Title>
          
          <Space size="large">
            <Badge count={5} size="small">
              <Button 
                type="text" 
                icon={<BellOutlined />} 
                size="large"
                style={{ color: '#595959' }}
              />
            </Badge>
            <Avatar 
              icon={<UserOutlined />} 
              style={{ backgroundColor: '#1890ff' }}
            />
          </Space>
        </Header>
        
        <Content 
          style={{ 
            margin: '32px',
            background: '#f5f5f5',
            borderRadius: 12,
            overflow: 'hidden'
          }}
        >
          <div style={{ background: 'white', minHeight: 'calc(100vh - 180px)', borderRadius: 12 }}>
            {renderContent()}
          </div>
        </Content>
      </Layout>
    </Layout>
  )
}

export default App 